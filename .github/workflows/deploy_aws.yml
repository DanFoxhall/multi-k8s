name: Deploy MultiK8s to AWS EKS
on:
  push:
    branches:
      - master

env:
  SHA: $(git rev-parse HEAD)

jobs:
  build:
    runs-on: ubuntu-latest

#    permissions:
#      contents: 'read'
#      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t danfoxhall/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true danfoxhall/react-test npm test


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REGISTRY/multi-client-k8s:${{ env.SHA }} -f ./client/Dockerfile ./client
          docker build -t $REGISTRY/multi-server-k8s:${{ env.SHA }} -f ./server/Dockerfile ./server
          docker build -t $REGISTRY/multi-worker-k8s:${{ env.SHA }} -f ./worker/Dockerfile ./worker

      - name: Push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |-
          docker push $REGISTRY/multi-client-k8s:${{ env.SHA }}
          docker push $REGISTRY/multi-server-k8s:${{ env.SHA }}
          docker push $REGISTRY/multi-worker-k8s:${{ env.SHA }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name multik8s

      - name: Apply
        run: |-
          kubectl apply -f k8s